{
  "openapi": "3.0.1",
  "info": {
    "title": "CalculationsCO2e",
    "description": "CarbonFight est une application web & mobile open source et open data dont l’objectif est de faire de chaque citoyen un acteur de la diminution des émissions de gaz à effet de serre par la mesure de son empreinte carbone personnelle et la mise en place de solutions pour la faire baisser.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.carbonfight.app/v1"
    }
  ],
  "tags": [
    {
      "name": "calculations",
      "description": "CarbonFight Calculation est une API permettant de connaître les émissions CO2e d'une action du quotidien à partir des 250 facteurs d'émission CO2e les plus courants."
    },
    {
      "name": "categories",
      "description": "Liste les catégories des différents facteurs d'émission CO2e disponibles dans l'API."
    },
    {
      "name": "actions",
      "description": "Au sein d'une catégorie indiquée en paramètre, liste les différentes actions."
    },
    {
      "name": "options",
      "description": "Au sein d'une action dans une catégorie indiquées en paramètre, liste les différentes options de l'action."
    }
  ],
  "paths": {
    "/calculations": {
      "get": {
        "tags": ["calculations"],
        "parameters": [
          {
            "in": "query",
            "name": "category",
            "description": "Catégorie de l'action. La liste des catégories peut être obtenue par la requête \"/categories\"",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "action",
            "description": "Nom de l'action. La liste des actions peut être obtenue par la requête \"/actions\"",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "option",
            "description": "Option de l'action. La liste des options peut être obtenue par la requête \"/options\"",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "count",
            "description": "Pour les transports, nombre de KMs\n\nPour la nourriture, nombre de portions\n\nPour le gas et électricité, le nombre de KWH\n\nPour l'eau, le nombre de m3\n\n### Cas particulier\n| action | count |\n|---------|--------------|\n| metro | nombre de stations |\n| jetski | nombre d'heures |",
            "schema": {
              "type": "number",
              "default": 1
            },
            "required": false
          },
          {
            "in": "query",
            "name": "side",
            "description": "Uniquement pour la nourriture, indique l'accompagnement d'un plat principal. C'est un tableau de string contenant les différents accompagnements qui peuvent être listés par la requête \"/options\" de l'action \"side\" dans la catégorie \"food\".",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Side"
              }
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Calculations"
                },
                "example": {
                  "category": "food",
                  "action": "bread",
                  "option": "Pain de mie",
                  "count": 1,
                  "co2e": 88,
                  "hint": "Une portion de pain de 50g, correspondant à un petit pain que l'on trouve dans les cafétérias."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonException"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonException"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonException"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonException"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonException"
                }
              }
            }
          }
        }
      }
    },
    "/categories": {
      "get": {
        "tags": ["categories"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Categories"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonException"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonException"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonException"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonException"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonException"
                }
              }
            }
          }
        }
      }
    },
    "/actions": {
      "get": {
        "tags": ["actions"],
        "parameters": [
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Actions"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonException"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonException"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonException"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonException"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonException"
                }
              }
            }
          }
        }
      }
    },
    "/options": {
      "get": {
        "tags": ["options"],
        "parameters": [
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "action",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Options"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonException"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonException"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonException"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonException"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonException"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Side": {
        "type": "string",
        "example": [
          "Légumes",
          "Riz"
        ]
      },
      "Calculations": {
        "description": "La totalité des paramètres est retournée dans le body, y compris si des valeurs par défaut ont été automatiquement sélectionnés.",
        "type": "object",
        "properties": {
          "category": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "option": {
            "type": "string"
          },
          "count": {
            "type": "number"
          },
          "co2e": {
            "description": "L'émission CO2e en grammes",
            "type": "number"
          },
          "hint": {
            "description": "Complément d'information sur l'action",
            "type": "string"
          }
        }
      },
      "Categories": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "energy",
              "transport",
              "food"
            ]
          }
        }
      },
      "Actions": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "coffee",
              "bread",
              "cheese",
              "drinks",
              "desert",
              "side",
              "main",
              "starter"
            ]
          }
        }
      },
      "Options": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Géothermique",
              "Fioul",
              "Éolienne (terre)",
              "Biomasse",
              "Éolienne (mer)",
              "Nucléaire",
              "Hydroélectrique",
              "Charbon"
            ]
          }
        }
      },
      "JsonException": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number"
          },
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}
